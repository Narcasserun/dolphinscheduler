<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<configuration>
	<property>
		<name>spring.datasource.minIdle</name>
		<value>5</value>
		<description>
			Init connection number
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.maxActive</name>
		<value>50</value>
		<description>
			Max connection number
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.connectionTimeout</name>
		<value>60000</value>
		<description>
			Max wait time for get a connection in milliseconds.
			If configuring maxWait, fair locks are enabled by default and concurrency efficiency decreases.
			If necessary, unfair locks can be used by configuring the useUnfairLock attribute to true.
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.idleTimeout</name>
		<value>60000</value>
		<description>
			Milliseconds for check to close free connections
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.validationQuery</name>
		<value>SELECT 1</value>
		<description>
			The SQL used to check whether the connection is valid requires a query statement.
			If validation Query is null, testOnBorrow, testOnReturn, and testWhileIdle will not work.
		</description>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.validationTimeout</name>
		<value>3</value>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<description>
			Check whether the connection is valid for timeout, in seconds
		</description>
		<on-ambari-upgrade add="true"/>
	</property>
	<property>
		<name>spring.datasource.isAutoCommit</name>
		<value>true</value>
		<value-attributes>
			<type>boolean</type>
		</value-attributes>
		<description>
		</description>
		<on-ambari-upgrade add="true"/>
	</property>
</configuration>